// Generated by CoffeeScript 2.7.0
(function() {
  var checkboxes, handleCheckbox, updatePermissions;

  checkboxes = {
    google: '#enableGoogleForms',
    webwork: '#enableWebwork'
  };

  updatePermissions = async function() {
    var checkbox, name, results;
    for (name in checkboxes) {
      checkbox = checkboxes[name];
      if (!document.querySelector(checkbox).checked) {
        await chrome.runtime.sendMessage({
          removePermissions: name
        });
      }
    }
// We need to do this because if a wildcard permission is removed, all
// permissions are removed
    results = [];
    for (name in checkboxes) {
      checkbox = checkboxes[name];
      if (document.querySelector(checkbox).checked) {
        results.push((await chrome.runtime.sendMessage({
          requestPermissions: name
        })));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  handleCheckbox = async function(name) {
    var checkbox, feature;
    checkbox = document.querySelector(checkboxes[name]);
    feature = (await chrome.runtime.sendMessage({
      getFeature: name
    }));
    if (feature.enabled) {
      checkbox.checked = true;
    }
    return checkbox.onclick = async function() {
      var granted;
      if (checkbox.checked) {
        granted = (await chrome.runtime.sendMessage({
          requestPermissions: name
        }));
        if (granted) {
          await chrome.runtime.sendMessage({
            enableFeature: name
          });
        } else {
          checkbox.checked = false;
        }
      } else {
        await chrome.runtime.sendMessage({
          disableFeature: name
        });
      }
      return updatePermissions();
    };
  };

  window.onload = function() {
    var name, results;
    results = [];
    for (name in checkboxes) {
      results.push(handleCheckbox(name));
    }
    return results;
  };

}).call(this);

//# sourceMappingURL=options.js.map
